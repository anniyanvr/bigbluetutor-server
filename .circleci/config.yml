# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/node:7.10
    working_directory: ~/repo
    steps:
      # Dependences: DB
      - type: shell
        name: Install RethinkDB
        command: |
          sudo apt-get update
          sudo apt-get -y install lsb-core
          lsb_release -a
          echo "deb http://download.rethinkdb.com/apt `lsb_release -cs` main" | sudo tee /etc/apt/sources.list.d/rethinkdb.list
          wget -qO- https://download.rethinkdb.com/apt/pubkey.gpg | sudo apt-key add -
          sudo apt-get update
          sudo apt-get install rethinkdb
          sudo cp /etc/rethinkdb/default.conf.sample /etc/rethinkdb/instances.d/instance1.conf
          echo "cache-size=128" | sudo tee --append /etc/rethinkdb/instances.d/instance1.conf
          echo "no-http-admin" | sudo tee --append /etc/rethinkdb/instances.d/instance1.conf
          sudo /etc/init.d/rethinkdb restart
          sleep 5
      # Dependences: DB drivers
      - type: shell
        name: RethinkDB Python driver setup
        command: |
          sudo apt-get install python3-pip
          sudo pip3 install rethinkdb python-dotenv
      # Checkout
      - checkout
      # App Setup
      - type: shell
        name: App setup
        command: |
          cp dotenv .env
          npm install
          npm run db:createtables
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run: yarn install
      # Cache
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      # Run tests!
      #- run: yarn test
      ##########################################################################
      ## If all test passed                                                   ##
      ##########################################################################
      # Setup docker
      - type: setup-docker-engine
      # Install docker client
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.05.0-ce"
            sudo curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
            sudo tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            sudo mv /tmp/docker/* /usr/bin
      # Finally build the image and deploy
      - deploy:
          name: Build docker image
          command: |
            if [[ $CIRCLE_BRANCH == "master" && ${CI_PULL_REQUEST} == "" ]]; then
              echo "Docker image will be created. Enabling sudo for docker"
              ./scripts/build_image.sh
            else
              echo "Docker image won't be created. Enabling sudo for docker"
              echo "${CIRCLE_BRANCH}"
              echo "${CI_PULL_REQUEST}"
            fi
